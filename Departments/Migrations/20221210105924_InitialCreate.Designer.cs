// <auto-generated />
using System;
using Departments.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Departments.Migrations
{
    [DbContext(typeof(DepartmentsContext))]
    [Migration("20221210105924_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "ru_RU.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("Departments.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("department_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasDefaultValueSql("1");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ParentId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("Departments.Models.Department", b =>
                {
                    b.HasOne("Departments.Models.Department", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .HasConstraintName("department_fk")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
